import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DbTest
{
	private Connection getConnection() throws SQLException
	{
		Connection connection = DriverManager
				.getConnection("jdbc:derby:C:\\Users\\hhcsxx1\\MyDB;create=true;user=test;password=aaa;");
		connection.setAutoCommit(false);
		return connection;
	}

	private void createTable(Connection connection) throws SQLException
	{
		Statement statement = connection.createStatement();

		String sql = "create table USERS("
				+ "   ID                           BIGINT                       not null generated by default as identity,"
				+ "   USER_NAME            VARCHAR(20)            not null,"
				+ "   PASSWORD             VARCHAR(20),"
				+ "   constraint P_KEY_1 primary key (ID))";
		statement.execute(sql);
		// statement.execute("drop table users");
		connection.commit();

		sql = "create unique index USER_NAME_INDEX on USERS (" + "   USER_NAME            ASC)";
		statement.execute(sql);

		statement.close();
	}

	private void create(User user)
	{
		Connection connection = null;

		try
		{
			connection = this.getConnection();
			PreparedStatement statement = connection
					.prepareStatement("insert into users (user_name,password) values(?,?)");

			int index = 1;
			statement.setString(index++, user.getUserName());
			statement.setString(index++, user.getPassword());

			statement.execute();

			user.setId(this.getId(connection));

			connection.commit();
		} catch (SQLException e)
		{
			try
			{
				getConnection().rollback();
			} catch (SQLException e1)
			{
				e1.printStackTrace();
			}
			throw new RuntimeException(e);
		} finally
		{
			if (connection != null)
			{
				try
				{
					getConnection().close();
				} catch (SQLException e)
				{
					e.printStackTrace();
				}
			}
		}
	}

	private Long getId(Connection connection) throws SQLException
	{
		CallableStatement callableStatement = connection.prepareCall("values identity_val_local()");

		ResultSet resultSet = callableStatement.executeQuery();
		resultSet.next();
		Long id = resultSet.getLong(1);
		resultSet.close();
		callableStatement.close();
		return id;
	}

	public static void main(String[] args)
	{
		DbTest dbTest = new DbTest();
		// try
		// {
		// dbTest.createTable(dbTest.getConnection());
		// } catch (SQLException e)
		// {
		// e.printStackTrace();
		// }
		User user = new User();
		user.setUserName("bbbb");
		user.setPassword("ccc");
		dbTest.create(user);
	}
}
